{"name":"QRadioPredict","tagline":"Radio propagation prediction and simulation tool for VHF-UHF ","body":"QRadioPredict\r\n====\r\n\r\nQRadioPredict is an experimental software for VHF-UHF propagation prediction and radio coverage analysis. Currently it works on Linux and has the following features:\r\n- Uses the Irregular Terrain Model, also known as Longley-Rice\r\n- Can be used as a repeater site planing tool\r\n- Static signal plot coverage, distance configurable\r\n- Up to four ground stations and one mobile station\r\n- Uses public available data\r\n- Uses OpenStreetMap tiles or public sattelite imagery as background\r\n- Elevation profiles are taken from NASA 1 degree SRTM 3 arcsec elevation files (*.hgt) obtainable from various sources\r\n- Predicts radio signal quality on different frequencies simultaneously\r\n- Can be connected to Flightgear to use its powerful radio capabilities\r\n- Displays APRS stations according to a time filter configurable by the user\r\n- Has an internal APRS client which can be used to display stations as a landmark\r\n- Uses a new algorithm for glound clutter attenuation prediction, based on a ray model\r\n- Terrain type data is taken from Corine CLC2006 shapefiles, which gives great accuracy for all of Europe\r\n- Can use antenna radiation patterns generated by 4NEC2 or other NEC2 compatible antenna modelling programs\r\n- Is completely integrated with Flightgear, the open source flight simulator, which has real-time radio prediction capabilities\r\n\r\n\r\nQRadioPredict can operate as a traditional standalone program with static plots and radio links, or can be connected to Flightgear, the free flight simulator, in order to use it's powerful radio simulation.\r\n\r\n\r\nDownload\r\n--------\r\n\r\nQRadioPredict is distributed as source code package and binaries for Linux. Please see https://sourceforge.net/projects/qradiopredict/ for downloads.\r\nTo run QRadioPredict you need to have installed the following:\r\n- Qt >= 4.7\r\n- Sqlite 3\r\n- GDAL >= 1.9.2 with GEOS bindings\r\n- GEOS\r\n\r\nOn Debian: apt-get install gdal-bin libgdal1 libgdal1-dev libgeos-3.3.3 libgeos-dev libsqlite3-0\r\n\r\n\r\nUsage\r\n-----\r\n\r\nRun the bash script qradiopredict.\r\nThe first time you start QRadioPredict you should open Edit -> Settings and set your local preferences and paths. \r\nThen, you might want to add a mobile station on the map, and up to four ground stations. Set the locations for the mobile using the flightplan tab. Each ground station tab has a button which generates 2D plots on the map. Set the opacity of the plot using the slider on the top right side, and the plot distance using the filed just below the opacity slider. Run the program standalone, or connect it to Flightgear by pressing the \"Start Flightgear\" button and then after it has started, the connect button. Send all data to Flightgear by pressing the third button, which should start your simulation.\r\nThe terrain data format is NASA SRTM 3 arcsec, in HGT files which are 2884802 bytes in size.\r\nThe clutter data should be shapefiles obtained from the CLC2006 project, and cropped to 1 degree size. Use the clip.py script to crop the shapefiles to the required size. Needs OGR and GDAL installed. Adjust the numbers to your location.\r\n\r\nKnown problems\r\n--------------\r\n\r\nVery slow static plot generation when enabling ground clutter: to be resolved in a future release.\r\nSee the bug tracker on Github: https://github.com/k/QRadioPredict/issues\r\n\r\n\r\nGetting help and reporting bugs\r\n-------------------------------\r\n\r\nYou can either file a ticket at https://sourceforge.net/projects/qradiopredict/ or open a thread in the forums.\r\n\r\nInstallation from source\r\n------------------------\r\n\r\nThe source code is hosted on Github: https://github.com/k/qradiopredict\r\n\r\nTo compile qradiopredict from source you need the following dependencies:\r\n- Qt 5\r\n- Sqlite 3\r\n- GDAL >= 1.7.0 compiled with GEOS (if using clutter attenuation)\r\n- Qt 4.7 or later and optionally Qt Creator (qradiopredict works with Qt 5)\r\nOn Debian: apt-get install gdal-bin libgdal1 libgdal1-dev libgeos-3.3.3 libgeos-dev libsqlite3-0\r\n\r\nQRadioPredict comes with a simple qmake build setup. It can be compiled from within Qt Creator or in a terminal:\r\n\r\n<pre>\r\n$ git clone https://github.com/k/qradiopredict.git qradiopredict\r\n$ cd qradiopredict\r\n$ mkdir build\r\n$ cd build\r\n$ qmake ..\r\n$ make\r\n</pre>\r\n\r\nTo build in debug mode add \"CONFIG+=debug\" to the qmake step above. There are also some other qmake options, see the qradiopredict.pro file.\r\n\r\n\r\nCredits and License\r\n-------------------\r\n\r\nQRadioPredict is designed and developed by Adrian Musceac YO8RZZ, and it is licensed under the GNU General Public License version 2.\r\nThe MapGraphics library was coded by Raptorswing and comes with a FreeBSD license.\r\nFollowing people and organisations have contributed:\r\n\r\n- Holger Schurig, documenting the ITM source code in a good fashion\r\n- Raptorswing, providing the MapGraphics library, upon which this program is based\r\n\r\nAlso thanks to Durk Talsma, Flightgear developer, who encouraged me to contribute my code, and Torsten Dreyer, for giving me a detailed lesson of Flightgear internal working.\r\n\r\nSome of the icons are from the GNOME and KDE icon themes.\r\n\r\nLet me know if somebody or something is missing from the list!\r\n\r\nAdrian YO8RZZ \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}